---
name: "Should return all frauds - should count all frauds"
request:
  method: "GET"
  url: "/frauds"
response:
  status: 200
  headers:
    Content-Type: 'application/json'
  body:
    count: 3
---
name: "Should reject request because loan amount is missing"
request:
  method: "PUT"
  url: "/fraudcheck"
  headers:
    Content-Type: 'application/json'
  body:
    clientId: 4000000000
response:
  status: 400
---
name: "Should accept loan amount"
request:
  method: "PUT"
  url: "/fraudcheck"
  headers:
    Content-Type: 'application/json'
  body:
    clientId: 1000000000
    loanAmount: 500
  matchers:
    body:
      - path: $.['clientId']
        type: by_regex
        value: "1[0-9]{9}"
response:
  status: 200
  headers:
    Content-Type: 'application/json'
  body:
    fraudCheckStatus: "OK"
---
name: "Should mark client as fraud"
request:
  method: "PUT"
  url: "/fraudcheck"
  headers:
    Content-Type: 'application/json'
  body:
    clientId: 2000000000
    loanAmount: 99999
  matchers:
    body:
      - path: $.['clientId']
        type: by_regex
        value: "2[0-9]{9}"
response:
  status: 200
  headers:
    Content-Type: 'application/json'
  body:
    fraudCheckStatus: "FRAUD"
    rejectionReason: "Amount too high"
---
name: "Should return OKEY status for good-guy client ID"
request:
  method: "GET"
  url: "/frauds/good-guy"
  queryParameters:
    name: "good-guy"
response:
  status: 200
  headers:
    Content-Type: "{{{ request.headers.Content-Type.0 }}};charset=UTF-8"
  body:
    value: "Don't worry, you're not a fraud"
priority: 1
---
name: "Should return FRAUD status for bad-guy client ID"
request:
  method: "GET"
  url: "/frauds/bad-guy"
  queryParameters:
    name: "bad-guy"
response:
  status: 403
  headers:
    Content-Type: "{{{ request.headers.Content-Type.0 }}}"
  body:
    value: "Sorry but you're a fraud"
